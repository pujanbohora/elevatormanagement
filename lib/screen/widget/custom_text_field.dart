// Flutter imports:// Flutter imports:import 'package:flutter/material.dart';import 'package:flutter/services.dart';// Project imports:import '../../constants/app_color.dart';// Package imports:typedef ValidatorFunc = String? Function(String?);class InputField extends StatefulWidget {  final String hintText;  final TextEditingController textEditingController;  final TextInputType keyBoardType;  final Function(String) getInputFieldValue;  final ValidatorFunc validator;  final List<TextInputFormatter> inputFormatters;  final TextInputAction? textInputAction;  final FocusNode? focusNode;  final bool isCapitalized;  final bool isObscure;  const InputField(      {required this.validator,        required this.textEditingController,        required this.getInputFieldValue,        required this.hintText,        this.isCapitalized = false,        this.focusNode,        this.keyBoardType = TextInputType.text,        this.inputFormatters = const [],        this.textInputAction,        this.isObscure = false,        Key? key})      : super(key: key);  @override  State<InputField> createState() => _InputFieldState();}class _InputFieldState extends State<InputField> {  @override  Widget build(BuildContext context) {    return TextFormField(      controller: widget.textEditingController,      obscureText: widget.isObscure,      autovalidateMode: widget.focusNode != null          ? widget.focusNode!.hasFocus          ? AutovalidateMode.always          : AutovalidateMode.disabled          : AutovalidateMode.disabled,      focusNode: widget.focusNode,      textCapitalization: widget.isCapitalized          ? TextCapitalization.words          : TextCapitalization.none,      validator: (String? value) => widget.validator(value),      onChanged: (String value) => widget.getInputFieldValue(value),      keyboardType: widget.keyBoardType,      textInputAction: widget.textInputAction,      inputFormatters: widget.inputFormatters,      decoration: InputDecoration(        fillColor: white,        border:  const OutlineInputBorder(          borderRadius: BorderRadius.all(            Radius.circular(10.0),          ),          borderSide: BorderSide(color: black),        ),        filled: true,        hintStyle: TextStyle(          fontSize: 14,          fontWeight: FontWeight.w400,        ),        hintText: widget.hintText,        contentPadding: EdgeInsets.symmetric(horizontal: 10, vertical: 16),        focusedBorder: const OutlineInputBorder(            borderSide: BorderSide(color: kPrimaryColor),            borderRadius: BorderRadius.all(              Radius.circular(10.0),            )),        enabledBorder: const OutlineInputBorder(            borderSide: BorderSide(color: grey_400),            borderRadius: BorderRadius.all(              Radius.circular(10.0),            )),      ),    );  }}