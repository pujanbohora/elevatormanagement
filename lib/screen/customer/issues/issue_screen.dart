import 'dart:convert';import 'package:flutter/material.dart';import 'package:intl/intl.dart';import 'package:shared_preferences/shared_preferences.dart';import '../../../api/repositories/customer_issue_repo.dart';import '../../../config/api_response.config.dart';import '../../../constants/app_color.dart';import '../../../constants/constants_name.dart';import '../../../constants/font_size.dart';import '../../../constants/route_name.dart';import '../../../model/response/customer_issue_response.dart';import '../../../model/response/user_response.dart';import '../../widget/custom_app_bar.dart';import 'issue_view_model.dart';class UserIssues extends StatefulWidget {  const UserIssues({    Key? key,  }) : super(key: key);  @override  State<UserIssues> createState() => _UserIssuesState();}class _UserIssuesState extends State<UserIssues> {  late Future<List<dynamic>> issuesValue;  List<String> statusList = [    "ALL",    "CONFIRMED",    "PENDING",    "DELIVERED",    "CANCELLED",  ];  @override  initState() {    super.initState();    getUser();    issuesValue = IssuesRepository().getAllIssue();  }  UserResponse? user;  getUser() async {    SharedPreferences sharedPreferences =        await SharedPreferences.getInstance();    String? userData = sharedPreferences.getString('user');    Map<String, dynamic> userMap = json.decode(userData!);    UserResponse userD = UserResponse.fromJson(userMap);    setState(() {      user = userD;    });  }  @override  Widget build(BuildContext context) {    return Scaffold(        appBar: user != null            ? user!.isStaff == false                ? appBar(                    appBarBackgroupColor: white,                    noBackButton: true,                    navTitle: "Issues",                    settingIcon: InkWell(                        onTap: openFilterBottomSheet,                        child: const Padding(                            padding: EdgeInsets.all(8.0),                            child: Icon(                              Icons.filter_alt_outlined,                              color: black,                            ))))                : null            : null,        body: RefreshIndicator(          onRefresh: () async {            setState(() {              issuesValue = IssuesRepository().getAllIssue();            });          },          child: FutureBuilder<List<dynamic>>(              future: issuesValue,              builder: (context, snapshot) {                if (snapshot.hasData) {                  return                    SingleChildScrollView(                    physics: const AlwaysScrollableScrollPhysics(),                    child: Padding(                        padding: const EdgeInsets.symmetric(                            horizontal: 10, vertical: 20),                        child: Column(                          children: [                            Container(                                padding: const EdgeInsets.symmetric(                                    horizontal: 10, vertical: 10),                                decoration: BoxDecoration(                                  borderRadius:                                      BorderRadius.circular(10.0),                                  color: primary,                                ),                                child: Row(                                  crossAxisAlignment:                                      CrossAxisAlignment.center,                                  children: [                                    Expanded(                                      flex: 3,                                      child: Column(                                        mainAxisAlignment:                                            MainAxisAlignment.center,                                        crossAxisAlignment:                                            CrossAxisAlignment.center,                                        children: [                                          const Icon(                                            Icons.shopping_cart,                                            color: white,                                          ),                                          Text(                                            TOTAL_ORDER_LBL,                                            style: Theme.of(context)                                                .textTheme                                                .subtitle2!                                                .copyWith(                                                    color: white),                                            maxLines: 2,                                            softWrap: true,                                            overflow:                                                TextOverflow.ellipsis,                                            textAlign:                                                TextAlign.center,                                          ),                                          Text(                                            snapshot.data!.length                                                .toString(),                                            maxLines: 2,                                            softWrap: true,                                            overflow:                                                TextOverflow.ellipsis,                                            style: TextStyle(                                                color: white,                                                fontWeight:                                                    FontWeight.bold),                                          )                                        ],                                      ),                                    ),                                    Expanded(                                      flex: 3,                                      child: InkWell(                                        onTap: () {},                                        child: Column(                                          mainAxisAlignment:                                              MainAxisAlignment                                                  .center,                                          crossAxisAlignment:                                              CrossAxisAlignment                                                  .center,                                          children: [                                            const Icon(                                              Icons                                                  .account_balance_wallet,                                              color: white,                                            ),                                            Text(                                              BAL_LBL,                                              style: Theme.of(context)                                                  .textTheme                                                  .subtitle2!                                                  .copyWith(                                                      color: white),                                              maxLines: 2,                                              softWrap: true,                                              overflow: TextOverflow                                                  .ellipsis,                                              textAlign:                                                  TextAlign.center,                                            ),                                            const Text(                                              "0",                                              maxLines: 2,                                              softWrap: true,                                              overflow: TextOverflow                                                  .ellipsis,                                              style: TextStyle(                                                color: white,                                                fontWeight:                                                    FontWeight.bold,                                              ),                                            )                                          ],                                        ),                                      ),                                    ),                                    Expanded(                                      flex: 3,                                      child: InkWell(                                        onTap: () {},                                        child: Column(                                          mainAxisAlignment:                                              MainAxisAlignment                                                  .center,                                          crossAxisAlignment:                                              CrossAxisAlignment                                                  .center,                                          children: [                                            const Icon(                                              Icons.card_travel,                                              color: white,                                            ),                                            Text(                                              PENDING_ORDER_LBL,                                              style: Theme.of(context)                                                  .textTheme                                                  .subtitle2!                                                  .copyWith(                                                      color: white),                                              maxLines: 2,                                              softWrap: true,                                              overflow: TextOverflow                                                  .ellipsis,                                              textAlign:                                                  TextAlign.center,                                            ),                                            const Text(                                              "0",                                              maxLines: 2,                                              softWrap: true,                                              overflow: TextOverflow                                                  .ellipsis,                                              style: TextStyle(                                                  color: white,                                                  fontWeight:                                                      FontWeight                                                          .bold),                                            )                                          ],                                        ),                                      ),                                    ),                                  ],                                )),                            const SizedBox(                              height: 20,                            ),                            Container(                              decoration: const BoxDecoration(                                  borderRadius: BorderRadius.only(                                      topLeft: Radius.circular(10.0),                                      topRight:                                          Radius.circular(10.0)),                                  color: white,                                  boxShadow: [                                    BoxShadow(                                      offset: Offset(0, -9),                                      blurRadius: 10,                                      spreadRadius: 0,                                      color: shadowColor,                                    )                                  ]),                              child: ListView.builder(                                padding: EdgeInsets.zero,                                physics:                                    const BouncingScrollPhysics(),                                shrinkWrap: true,                                itemCount: snapshot.data!.length,                                itemBuilder: (context, index) {                                  return Card(                                    elevation: 0,                                    margin: const EdgeInsets.only(                                        bottom: 10.0,                                        top: 13.0,                                        left: 7.0,                                        right: 7.0),                                    child: Container(                                      decoration: BoxDecoration(                                          color: cardBgColor,                                          borderRadius:                                              BorderRadius.circular(                                                  8)),                                      child: InkWell(                                        child: Padding(                                            padding:                                                const EdgeInsets.all(                                                    8.0),                                            child: Column(                                                crossAxisAlignment:                                                    CrossAxisAlignment                                                        .start,                                                children: <Widget>[                                                  Padding(                                                    padding:                                                        const EdgeInsets                                                                .only(                                                            left: 8,                                                            bottom:                                                                4),                                                    child: Text(                                                      "Issue ID: ${snapshot.data![index]["id"]}",                                                      style: Theme.of(                                                              context)                                                          .textTheme                                                          .subtitle2!                                                          .copyWith(                                                              fontWeight:                                                                  FontWeight.bold),                                                    ),                                                  ),                                                  Padding(                                                    padding: const EdgeInsets                                                            .symmetric(                                                        horizontal:                                                            8.0),                                                    child: Row(                                                      mainAxisSize:                                                          MainAxisSize                                                              .min,                                                      children: <                                                          Widget>[                                                        Text(                                                            "Issued Date: ${DateFormat('dd-MM-yyyy').format(DateTime.parse(snapshot.data![index]["ordered_date"]))}"),                                                        Spacer(),                                                        Container(                                                          margin: const EdgeInsets                                                                  .only(                                                              left:                                                                  8),                                                          padding: const EdgeInsets                                                                  .symmetric(                                                              horizontal:                                                                  10,                                                              vertical:                                                                  4),                                                          decoration: const BoxDecoration(                                                              color:                                                                  black,                                                              borderRadius:                                                                  BorderRadius.all(Radius.circular(4.0))),                                                          child: Text(                                                            snapshot.data![                                                                    index]                                                                [                                                                "status"],                                                            style: TextStyle(                                                                color:                                                                    white),                                                          ),                                                        )                                                      ],                                                    ),                                                  ),                                                  const Divider(),                                                  Padding(                                                    padding: const EdgeInsets                                                            .symmetric(                                                        horizontal:                                                            8.0,                                                        vertical: 5),                                                    child: Text(                                                      snapshot.data![                                                              index][                                                              "title"]                                                          .toString(),                                                      maxLines: 1,                                                      overflow:                                                          TextOverflow                                                              .ellipsis,                                                      style: Theme.of(                                                              context)                                                          .textTheme                                                          .subtitle2!                                                          .copyWith(                                                              fontWeight:                                                                  FontWeight.bold),                                                    ),                                                  ),                                                  Padding(                                                    padding:                                                        const EdgeInsets                                                                .symmetric(                                                            horizontal:                                                                8.0,                                                            vertical:                                                                5),                                                    child: Row(                                                      children: [                                                        Row(                                                          children: [                                                            const Icon(                                                                Icons                                                                    .person,                                                                size:                                                                    14),                                                            Text(                                                                " Assigned to: ${snapshot.data![index]["assigned_to"].isEmpty ? "N/A" : snapshot.data![index]["assigned_to"][0]["email"].toString()}"),                                                          ],                                                        ),                                                      ],                                                    ),                                                  ),                                                ])),                                        onTap: () {                                          Navigator.pushNamed(context, routeIssueDetails, arguments: snapshot.data![index]).then((value){                                            issuesValue = IssuesRepository().getAllIssue();                                          });                                        },                                      ),                                    ),                                  );                                },                              ),                            ),                          ],                        )),                  );                } else if (snapshot.hasError) {                  return Center(                      child: Text(snapshot.error.toString()));                } else {                  return const Center(                      child: CircularProgressIndicator());                }              }),        ));  }  void openFilterBottomSheet() {    showModalBottomSheet(        shape: const RoundedRectangleBorder(            borderRadius: BorderRadius.only(                topLeft: Radius.circular(40.0),                topRight: Radius.circular(40.0))),        isScrollControlled: true,        context: context,        backgroundColor: Colors.transparent,        builder: (BuildContext context) {          return StatefulBuilder(              builder: (BuildContext context, StateSetter setStater) {            return Wrap(              children: [                Container(                  decoration: const BoxDecoration(                    borderRadius: BorderRadius.only(                      topLeft: Radius.circular(40.0),                      topRight: Radius.circular(40.0),                    ),                    color: white,                  ),                  padding: EdgeInsets.only(                      bottom:                          MediaQuery.of(context).viewInsets.bottom),                  child: Column(                    mainAxisSize: MainAxisSize.min,                    children: [                      Padding(                        padding:                            EdgeInsets.only(bottom: 20, top: 20.0),                        child: Text(                          FILTER_BY,                          style: Theme.of(context)                              .textTheme                              .subtitle1!                              .copyWith(                                  fontWeight: FontWeight.bold,                                  color: darkFontColor,                                  fontSize: font_16),                        ),                      ),                      Flexible(                        child: SingleChildScrollView(                            padding: const EdgeInsets.only(top: 10.0),                            child: ListView.builder(                                physics: ScrollPhysics(),                                shrinkWrap: true,                                itemCount: statusList.length,                                itemBuilder: (context, int index) {                                  return Padding(                                    padding:                                        EdgeInsetsDirectional.only(                                            start: 20.0,                                            end: 20.0,                                            bottom: 15.0),                                    child: Container(                                      width: double.infinity,                                      decoration: BoxDecoration(                                        borderRadius:                                            BorderRadius.circular(                                                10.0),                                        color: cardBgColor,                                      ),                                      child: TextButton(                                          child: Text(                                              statusList[index],                                              style: Theme.of(context)                                                  .textTheme                                                  .subtitle1!                                                  .copyWith(                                                      color: darkFontColor                                                          .withOpacity(                                                              0.7))),                                          onPressed: () {}),                                    ),                                  );                                })),                      ),                    ],                  ),                ),              ],            );          });        });  }  Widget bottomSheetHandle(BuildContext context) {    return Container(      alignment: Alignment.center,      padding: const EdgeInsets.only(top: 10.0, bottom: 25.0),      margin: const EdgeInsets.all(13),      child: InkWell(        child: Container(          height: 28,          width: 28,          decoration: BoxDecoration(              color: black,              border: Border.all(                color: black,              ),              borderRadius: BorderRadius.all(Radius.circular(20))),          child: Center(            child: const Icon(              Icons.close,              color: white,              size: 16,            ),          ),        ),        onTap: () {          Navigator.pop(context);        },      ),    );  }}