// Flutter imports:import 'dart:convert';import 'package:elevatormaintance/api/repositories/user_repository.dart';import 'package:elevatormaintance/constants/app_color.dart';import 'package:elevatormaintance/constants/route_name.dart';import 'package:flutter/material.dart';import 'package:fluttertoast/fluttertoast.dart';import '../../constants/app_image.dart';import '../../constants/validator.dart';import '../widget/custom_button_widget.dart';import '../widget/custom_text_field.dart';import '../widget/customer_form_field_widget.dart';import '../widget/snackbar.dart';class SignupPage extends StatefulWidget {  const SignupPage({Key? key}) : super(key: key);  @override  State<SignupPage> createState() => _SignupPageState();}class _SignupPageState extends State<SignupPage> {  // var signUpRRepositorUser = getIt<SignUpRegisterUser>();  // final _formKey = GlobalKey<FormState>();  GlobalKey<FormState> _formKey = GlobalKey<FormState>();  String? email;  String? lastName;  FocusNode emailFocusNode = FocusNode();  bool canClearConfirmPasswordError = false;  bool isloading = false;  final TextEditingController passwordController = TextEditingController();  final TextEditingController confirmPasswordController =      TextEditingController();  final TextEditingController emailController = TextEditingController();  final TextEditingController firstNameController = TextEditingController();  final TextEditingController lastNameController = TextEditingController();  @override  Widget build(BuildContext context) {    Size size = MediaQuery.of(context).size;    return Scaffold(      body: SafeArea(          child: SingleChildScrollView(        child: Column(          children: [            Padding(              padding: const EdgeInsets.symmetric(                  horizontal: 10, vertical: 10),              child: Container(                width: size.width,                height: 60,                decoration: const BoxDecoration(                    image: DecorationImage(                        fit: BoxFit.contain,                        image: AssetImage(appLogo))),              ),            ),            SizedBox(              height: size.height * 0.02,            ),            Text(              'SIGN UP',              style: Theme.of(context)                  .textTheme                  .headline4!                  .copyWith(fontWeight: FontWeight.bold),            ),            SizedBox(              height: size.height * 0.02,            ),            Form(              autovalidateMode: AutovalidateMode.disabled,              key: _formKey,              child: Column(                mainAxisAlignment: MainAxisAlignment.center,                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  Padding(                    padding:                        const EdgeInsets.symmetric(horizontal: 20),                    child: RichText(                      text: const TextSpan(                        text: 'Name',                        style: TextStyle(                            fontSize: 16,                            color: Colors.black,                            fontWeight: FontWeight.bold),                        children: <TextSpan>[                          TextSpan(                            text: '*',                            style: TextStyle(                              color: Colors.red,                            ),                          ),                        ],                      ),                    ),                  ),                  SizedBox(height: 8,),                  Padding(                    padding: const EdgeInsets.symmetric(horizontal: 18),                    child: Row(                      children: [                        Expanded(                          child: InputField(                            textEditingController: firstNameController,                            // focusNode: emailFocusNode,                            validator: (value){},                            textInputAction: TextInputAction.next,                            getInputFieldValue: (String value) {                              setState(() {                                email = value;                              });                            },                            hintText: 'First Name',                          ),                        ),                        const SizedBox(width: 5,),                        Expanded(                          child: InputField(                            textEditingController: lastNameController,                            // focusNode: emailFocusNode,                            validator: (value){},                            textInputAction: TextInputAction.next,                            getInputFieldValue: (String value) {                              setState(() {                                email = value;                              });                            },                            hintText: 'Last Name',                          ),                        ),                      ],                    ),                  ),                  const SizedBox(                    height: 9,                  ),                  Padding(                    padding:                    const EdgeInsets.symmetric(horizontal: 20),                    child: RichText(                      text: const TextSpan(                        text: 'Email',                        style: TextStyle(                            fontSize: 16,                            color: Colors.black,                            fontWeight: FontWeight.bold),                        children: <TextSpan>[                          TextSpan(                            text: '*',                            style: TextStyle(                              color: Colors.red,                            ),                          ),                        ],                      ),                    ),                  ),                  SizedBox(height: 8,),                  Padding(                    padding:                        const EdgeInsets.symmetric(horizontal: 17),                    child: InputField(                      textEditingController: emailController,                      focusNode: emailFocusNode,                      validator: Validators.validateEmail,                      textInputAction: TextInputAction.next,                      getInputFieldValue: (String value) {                        setState(() {                          email = value;                        });                      },                      hintText: 'Enter your email',                    ),                  ),                  SizedBox(height: size.height * 0.02),                  Padding(                    padding:                        const EdgeInsets.symmetric(horizontal: 20),                    child: RichText(                      text: const TextSpan(                        text: 'Password',                        style: TextStyle(                            fontSize: 16,                            color: Colors.black,                            fontWeight: FontWeight.bold),                        children: <TextSpan>[                          TextSpan(                            text: '*',                            style: TextStyle(                              color: Colors.red,                            ),                          ),                        ],                      ),                    ),                  ),                  CustomFormField(                    fieldName: '',                    textEditingController: passwordController,                    isObscure: true,                    hint: 'Password',                    validator: (value) =>                        Validators.validatePassword(value, false),                  ),                  SizedBox(height: size.height * 0.02),                  Padding(                    padding:                        const EdgeInsets.symmetric(horizontal: 20),                    child: RichText(                      text: const TextSpan(                        text: 'Confirm Password',                        style: TextStyle(                            fontSize: 16,                            color: Colors.black,                            fontWeight: FontWeight.bold),                        children: <TextSpan>[                          TextSpan(                            text: '*',                            style: TextStyle(                              color: Colors.red,                            ),                          ),                        ],                      ),                    ),                  ),                  CustomFormField(                    fieldName: '',                    textEditingController: confirmPasswordController,                    isObscure: true,                    hint: 'Confirm Password',                    validator: (value) =>                        Validators.validateConfirmPassword(                            passwordController.text,                            value,                            canClearConfirmPasswordError),                  ),                  SizedBox(height: size.height * 0.03),                  Padding(                    padding: const EdgeInsets.symmetric(                      horizontal: 20.0,                    ),                    child: ActionButton(                        background: lightTabBlue,                        width: size.width,                        height: 55,                        isLoading: isloading,                        borderRadius: 10,                        text: Text(                          "SIGN UP",                          style: Theme.of(context)                              .textTheme                              .bodyText1!                              .copyWith(                                  color: Colors.white,                                  fontSize: 17.0,                                  fontWeight: FontWeight.bold),                        ),                        onPressed: () async{                          if (_formKey.currentState!.validate())  {                            if (firstNameController.text.isEmpty || lastNameController.text.isEmpty) {                              Fluttertoast.showToast(                                  msg: 'Please Enter Your Name');                            }else {                              setState(() {                                isloading = true;                              });                              try {                                final datas = jsonEncode({                                  "first_name":                                  firstNameController.text,                                  "last_name": lastNameController.text,                                  "email": emailController.text,                                  "password": passwordController.text                                });                                final res =                                    await UserRepository().registerUser(datas);                                setState(() {                                  isloading = true;                                });                                if (res == true) {                                  setState(() {                                    isloading = false;                                  });                                  snackThis(                                      context: context,                                      color: Colors.green,                                      duration: 2,                                      content: const Text(                                          "Account has been Successfully created"));                                  firstNameController.clear();                                  lastNameController.clear();                                  emailController.clear();                                  passwordController.clear();                                  confirmPasswordController.clear();                                  // Navigator.                                  // Navigator.pop(context);                                } else {                                  setState(() {                                    isloading = false;                                  });                                  snackThis(                                      context: context,                                      color: Colors.red,                                      duration: 2,                                      content: Text(                                          "Failed to create profile"                                              .toString()));                                }                              } catch (e) {                                setState(() {                                  isloading = false;                                });                                snackThis(                                    context: context,                                    color: Colors.red,                                    duration: 2,                                    content: const Text(                                        "Failed to create profile"));                              }                            }                          }                        }),                  ),                  SizedBox(                    height: size.height * 0.03,                  ),                  Center(                    child: InkWell(                      onTap: () {                        // Navigator.pushNamed(context,                        //     Routes.GENERAL_USER_REGISTRATION_SCREEN);                      },                      child: Row(                        mainAxisAlignment: MainAxisAlignment.center,                        children: [                          Text(                            "Already have an account?",                            style:                                Theme.of(context).textTheme.bodyText1,                          ),                          const SizedBox(width: 10),                          InkWell(                            onTap: () {                              Navigator.pushNamed(                                  context, routeLogin);                            },                            child: Text(                              "LOGIN",                              style: Theme.of(context)                                  .textTheme                                  .bodyText1!                                  .copyWith(                                      color: lightTabBlue,                                      fontWeight: FontWeight.w900),                            ),                          ),                        ],                      ),                    ),                  ),                ],              ),            ),          ],        ),      )),    );  }}