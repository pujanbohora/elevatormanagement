import 'package:elevatormaintance/screen/auth/auth_view_model.dart';import 'package:flutter/material.dart';import 'package:provider/provider.dart';import '../../config/api_response.config.dart';import '../../constants/app_color.dart';import '../../constants/font_size.dart';import '../../constants/font_weight.dart';import '../../constants/route_name.dart';import '../../constants/validator.dart';import '../../view_model/common_view_model.dart';import '../widget/custom_button_widget.dart';import '../widget/custom_text_field.dart';import '../widget/snackbar.dart';class LoginScreen extends StatefulWidget {   LoginScreen({Key? key}) : super(key: key);  @override  State<LoginScreen> createState() => _LoginScreenState();}class _LoginScreenState extends State<LoginScreen> {  TextEditingController emailController = TextEditingController();  TextEditingController passwordController = TextEditingController();  String? email;  String? lastName;  late AuthViewModel _provider2;  FocusNode emailFocusNode = FocusNode();  FocusNode passwordFocusNode = FocusNode();  bool _isLoading = false;  @override  void initState() {    WidgetsBinding.instance.addPostFrameCallback((_) {       _provider2 = Provider.of<AuthViewModel>(context, listen: false);    });    super.initState();  }  @override  Widget build(BuildContext context) {    return Consumer2<AuthViewModel, CommonViewModel>(      builder: (context, auth, common, child) {        return Scaffold(          body: SafeArea(            child: Padding(              padding: EdgeInsets.symmetric(horizontal: 20 ),              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                mainAxisAlignment: MainAxisAlignment.center,                children: [                  Text(                    'Welcome back',                    style: TextStyle(                      fontSize: font_20,                      fontWeight: kW3,                      color: darkTextColor,                    ),                  ),                  SizedBox(height: 8 ),                  Text(                    "Sign Up to Elevator App",                    style: TextStyle(                      fontSize: font_20,                      fontWeight: kW7,                      color: darkTextColor,                    ),                  ),                  SizedBox(                    height: 30 ,                  ),                  Center(child: Column(                    mainAxisAlignment: MainAxisAlignment.center,                    children: [                      InputField(                        textEditingController: emailController,                        focusNode: emailFocusNode,                        validator: Validators.validateEmail,                        textInputAction: TextInputAction.next,                        getInputFieldValue: (String value) {                          setState(() {                            email = value;                          });                        },                        hintText: 'Enter your email',                      ),                    SizedBox(                      height: 16 ,                    ),                      InputField(                        isObscure: true,                        textEditingController: passwordController,                        focusNode: passwordFocusNode,                        validator: (String){"Enter your password";},                        textInputAction: TextInputAction.next,                        getInputFieldValue: (String value) {                          setState(() {                            email = value;                          });                        },                        hintText: 'Enter your Password',                      ),                    SizedBox(                      height: 25 ,                    ),                  ],)),              ActionButton(                  background: purpleColor,                  isLoading: common.isLoading,                  width: (MediaQuery.of(context).size.width) ,                  height: 50,                  borderRadius: 4,                  text: Text(                    "LOGIN",                    style: Theme.of(context)                        .textTheme                        .bodyText1!                        .copyWith(                        color: Colors.white,                        fontSize: 14 ,                        fontWeight: FontWeight.bold),                  ),                  onPressed: ()  async                  {                    common.setLoading(true);                    auth.setUsername(emailController.text);                    auth.setPassword(passwordController.text);                    // print("USER TYPE:::::${auth.user.type}");                    auth.login().then((value) {                      if (!isError(auth.loginApiResponse)) {                        try {                          // if (auth.user.type == "Student") {                          print("THIS IS STUDENT");                          common.setLoading(true);                          // Navigator.pop(context);                          common.setNavigationIndex(0);                          auth.fetchUser();                          snackThis(                            context: context,                            content: Text("Login Success"),                            color: Colors.green,                          );                          Navigator.pushNamed(context, routeNavigation);                          common.setLoading(false);                          // }                        } catch (e) {                          print("CATCH " + e.toString());                          snackThis(                            context: context,                            content: Text(e.toString()),                            color: Colors.red.shade700,                          );                          common.setLoading(false);                        }                        // Navigator.push(context, MaterialPageRoute(builder: (context) => Dashboard(),));                      } else {                        snackThis(                          context: context,                          content:                          Text("Please check credentials and try again"),                          color: Colors.red.shade700,                        );                        common.setLoading(false);                      }                      // print(auth.loginApiResponse.toString());                    }).catchError((e) {                      // Fluttertoast.showToast(msg: e.toString());                      common.setLoading(false);                    });                  }                  ),                  SizedBox(height: 16 ,),                  Row(                    children: [                      const Expanded(child: Divider()),                      SizedBox(width: 16 ,),                      Text(                        "or sign up via",                        style: TextStyle(                          fontSize: 14 ,                          fontWeight: FontWeight.w500,                          color: lightTextColor,                        ),                      ),                      SizedBox(width: 16 ,),                      const Expanded(child: Divider()),                    ],                  ),                ],              ),            ),          ),        );      }    );  }}