import 'dart:io';import 'package:shared_preferences/shared_preferences.dart';import 'package:http/http.dart' as http;import 'dart:convert';import '../api/api.dart';import '../model/request/login_request.dart';import '../model/response/login_reponse.dart';class LoginService {  Future<bool> login(      LoginRequest loginRequest, String username, String password) async {    SharedPreferences sharedPreferences = await SharedPreferences.getInstance();    try {      return await http          .post(Uri.parse(domain + '/user/auth/login/'),          headers: {            'Content-Type': 'application/json',            'accept': 'application/json',          },          body: json.encode(loginRequest.toJson()))          .then((data) {        if (data.statusCode == 200) {          final response = LoginResponse.fromJson(jsonDecode(data.body));          String user = jsonEncode(response);          sharedPreferences.setString('_auth_', user);          sharedPreferences.setString('refresh', response.refresh!);          sharedPreferences.setString('token', response.access!);          return true;        } else if (data.statusCode == 404 || data.statusCode == 401) {          return false;        } else {          return false;        }      }).catchError((e) {        return false;      });    } on SocketException catch (e) {      // ignore: avoid_print      // print(e);      return false;    } on HttpException {      return false;    } on FormatException {      return false;    }  }}