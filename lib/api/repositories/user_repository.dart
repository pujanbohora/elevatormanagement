import 'dart:convert';import '../../model/response/login_reponse.dart';import '../../model/response/user_response.dart';import '../api.dart';import '../endpoints.dart';import 'package:http/http.dart' as http;class UserRepository {  API api = API();  Future<dynamic> registerUser(final datas) async {    var client = http.Client();    var orderModel;    print("[POST]:::${domain+Endpoints.register}");    try {      var response = await client.post(          Uri.parse(domain+Endpoints.register),          headers: {            // 'Authorization': 'Bearer $token',            'Content-Type': 'application/json; charset=utf-8',          },          body: datas      );      print("STATUS CODE::::${response.statusCode}");      if (response.statusCode == 201) {        var jsonMap = jsonDecode(response.body);        print("RESPONSE:::::${response.body}");        orderModel = true;      }    } catch (e) {      print("EERESPOSE ERR :: " + e.toString());      return orderModel;    }    return orderModel;  }  Future<LoginResponse> login(data) async {    print("DATA :: " + data.toString());    dynamic response = await api.postData(data, Endpoints.login);    print("USER RESPONSE :: " + response.toString());    LoginResponse res = LoginResponse.fromJson(response);    return res;  }  Future<UserResponse> getUser() async {    dynamic response;    UserResponse res;    try {      response = await api.getWithToken(Endpoints.user);      print("RESSS::${response}");      res = UserResponse.fromJson(response);    } catch (e) {      res = UserResponse.fromJson(response);    }    return res;  }}